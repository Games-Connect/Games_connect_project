<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/cupertino/scrollbar.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/animation/animation_controller.dart'], (function load__packages__flutter__src__material__scrollbar_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__cupertino__scrollbar$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__animation__animation_controller$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const scrollbar = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scrollbar;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const color_scheme = packages__flutter__src__material__icon_button$46dart.src__material__color_scheme;
  const scrollbar_theme = packages__flutter__src__material__icon_button$46dart.src__material__scrollbar_theme;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const scrollbar$ = packages__flutter__src__cupertino__scrollbar$46dart.src__cupertino__scrollbar;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  var scrollbar$0 = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    ScrollNotificationTobool: () => (T.ScrollNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))(),
    LinkedHashSetOfMaterialState: () => (T.LinkedHashSetOfMaterialState = dart.constFn(collection.LinkedHashSet$(material_state.MaterialState)))(),
    VoidToColor: () => (T.VoidToColor = dart.constFn(dart.fnType(ui.Color, [])))(),
    ColorTodynamic: () => (T.ColorTodynamic = dart.constFn(dart.fnType(dart.dynamic, [ui.Color])))(),
    SetOfMaterialState: () => (T.SetOfMaterialState = dart.constFn(core.Set$(material_state.MaterialState)))(),
    SetOfMaterialStateToColor: () => (T.SetOfMaterialStateToColor = dart.constFn(dart.fnType(ui.Color, [T.SetOfMaterialState()])))(),
    SetOfMaterialStateTodouble: () => (T.SetOfMaterialStateTodouble = dart.constFn(dart.fnType(core.double, [T.SetOfMaterialState()])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))()
=======
define(['dart_sdk', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/widgets/form.dart', 'packages/flutter/src/material/text_field.dart', 'packages/flutter/src/widgets/widget_span.dart'], (function load__packages__flutter__src__material__text_form_field_dart(dart_sdk, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__widgets__form$46dart, packages__flutter__src__material__text_field$46dart, packages__flutter__src__widgets__widget_span$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const theme = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  const text_field = packages__flutter__src__material__text_field$46dart.src__material__text_field;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const editable_text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__editable_text;
  var text_form_field = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    FormFieldStateOfString: () => (T.FormFieldStateOfString = dart.constFn(form.FormFieldState$(core.String)))(),
    FormFieldStateOfStringToTextField: () => (T.FormFieldStateOfStringToTextField = dart.constFn(dart.fnType(text_field.TextField, [T.FormFieldStateOfString()])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))()
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAlwaysShown",
        [_Location_column]: 9,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "thickness",
        [_Location_column]: 9,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "thicknessWhileDragging",
        [_Location_column]: 9,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 9,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radiusWhileDragging",
        [_Location_column]: 9,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 185,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "notificationPredicate",
        [_Location_column]: 9,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9], widget_inspector._Location);
    },
    get C0() {
      return C[0] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 178,
        [_Location_file]: "file:///C:/flutter/sdk/flutter/packages/flutter/lib/src/material/scrollbar.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 191,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAlwaysShown",
        [_Location_column]: 7,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showTrackOnHover",
        [_Location_column]: 7,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverThickness",
        [_Location_column]: 7,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "thickness",
        [_Location_column]: 7,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 7,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "notificationPredicate",
        [_Location_column]: 7,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactive",
        [_Location_column]: 7,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20], widget_inspector._Location);
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 189,
        [_Location_file]: "file:///C:/flutter/sdk/flutter/packages/flutter/lib/src/material/scrollbar.dart"
      });
    },
    get C21() {
      return C[21] = dart.fn(scroll_notification.defaultScrollNotificationPredicate, T.ScrollNotificationTobool());
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name]: "Brightness.light",
        index: 1
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name]: "Brightness.dark",
        index: 0
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
=======
        __proto__: input_decorator.InputDecoration.prototype,
        [InputDecoration_alignLabelWithHint]: null,
        [InputDecoration_semanticCounterText]: null,
        [InputDecoration_enabled]: true,
        [InputDecoration_border]: null,
        [InputDecoration_enabledBorder]: null,
        [InputDecoration_disabledBorder]: null,
        [InputDecoration_focusedErrorBorder]: null,
        [InputDecoration_focusedBorder]: null,
        [InputDecoration_errorBorder]: null,
        [InputDecoration_hoverColor]: null,
        [InputDecoration_focusColor]: null,
        [InputDecoration_fillColor]: null,
        [InputDecoration_filled]: null,
        [InputDecoration_counterStyle]: null,
        [InputDecoration_counter]: null,
        [InputDecoration_counterText]: null,
        [InputDecoration_suffixIconConstraints]: null,
        [InputDecoration_suffixStyle]: null,
        [InputDecoration_suffixText]: null,
        [InputDecoration_suffix]: null,
        [InputDecoration_suffixIcon]: null,
        [InputDecoration_prefixStyle]: null,
        [InputDecoration_prefixText]: null,
        [InputDecoration_prefix]: null,
        [InputDecoration_prefixIconConstraints]: null,
        [InputDecoration_prefixIcon]: null,
        [InputDecoration_isCollapsed]: false,
        [InputDecoration_contentPadding]: null,
        [InputDecoration_isDense]: null,
        [InputDecoration_floatingLabelBehavior]: null,
        [InputDecoration_hasFloatingPlaceholder]: true,
        [InputDecoration_errorMaxLines]: null,
        [InputDecoration_errorStyle]: null,
        [InputDecoration_errorText]: null,
        [InputDecoration_hintMaxLines]: null,
        [InputDecoration_hintTextDirection]: null,
        [InputDecoration_hintStyle]: null,
        [InputDecoration_hintText]: null,
        [InputDecoration_helperMaxLines]: null,
        [InputDecoration_helperStyle]: null,
        [InputDecoration_helperText]: null,
        [InputDecoration_labelStyle]: null,
        [InputDecoration_labelText]: null,
        [InputDecoration_icon]: null
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: text_input.TextCapitalization.prototype,
        [_name]: "TextCapitalization.none",
        index: 3
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: ui.TextAlign.prototype,
        [_name$]: "TextAlign.start",
        index: 4
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 12,
        [_Location_line]: 252,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 12,
        [_Location_line]: 253,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 12,
        [_Location_line]: 254,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 12,
        [_Location_line]: 255,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textInputAction",
        [_Location_column]: 12,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 12,
        [_Location_line]: 257,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "strutStyle",
        [_Location_column]: 12,
        [_Location_line]: 258,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 12,
        [_Location_line]: 259,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlignVertical",
        [_Location_column]: 12,
        [_Location_line]: 260,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 12,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCapitalization",
        [_Location_column]: 12,
        [_Location_line]: 262,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 12,
        [_Location_line]: 263,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "toolbarOptions",
        [_Location_column]: 12,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "readOnly",
        [_Location_column]: 12,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showCursor",
        [_Location_column]: 12,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "obscuringCharacter",
        [_Location_column]: 12,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "obscureText",
        [_Location_column]: 12,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autocorrect",
        [_Location_column]: 12,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "smartDashesType",
        [_Location_column]: 12,
        [_Location_line]: 270,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C25() {
      return C[25] = dart.const({
<<<<<<< HEAD
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "smartQuotesType",
        [_Location_column]: 12,
        [_Location_line]: 271,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C26() {
      return C[26] = dart.const({
<<<<<<< HEAD
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.android",
        index: 0
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableSuggestions",
        [_Location_column]: 12,
        [_Location_line]: 272,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C27() {
      return C[27] = dart.const({
<<<<<<< HEAD
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.iOS",
        index: 2
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLengthEnforced",
        [_Location_column]: 12,
        [_Location_line]: 273,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C28() {
      return C[28] = dart.const({
<<<<<<< HEAD
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.linux",
        index: 3
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLengthEnforcement",
        [_Location_column]: 12,
        [_Location_line]: 274,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C29() {
      return C[29] = dart.const({
<<<<<<< HEAD
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.fuchsia",
        index: 1
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 12,
        [_Location_line]: 275,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C30() {
      return C[30] = dart.const({
<<<<<<< HEAD
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.macOS",
        index: 4
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minLines",
        [_Location_column]: 12,
        [_Location_line]: 276,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C31() {
      return C[31] = dart.const({
<<<<<<< HEAD
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.windows",
        index: 5
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "expands",
        [_Location_column]: 12,
        [_Location_line]: 277,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C32() {
      return C[32] = dart.const({
<<<<<<< HEAD
        __proto__: ui.Radius.prototype,
        [Radius_y]: 8,
        [Radius_x]: 8
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLength",
        [_Location_column]: 12,
        [_Location_line]: 278,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C33() {
      return C[33] = dart.const({
<<<<<<< HEAD
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChanged",
        [_Location_column]: 12,
        [_Location_line]: 279,
        [_Location_file]: null
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
      });
    },
    get C34() {
      return C[34] = dart.const({
<<<<<<< HEAD
        __proto__: core.Duration.prototype,
        [Duration__duration]: 600000
      });
    }
  }, false);
  var C = Array(35).fill(void 0);
  var I = ["package:flutter/src/material/scrollbar.dart"];
  var child$ = dart.privateName(scrollbar$0, "Scrollbar.child");
  var controller$ = dart.privateName(scrollbar$0, "Scrollbar.controller");
  var isAlwaysShown$ = dart.privateName(scrollbar$0, "Scrollbar.isAlwaysShown");
  var showTrackOnHover$ = dart.privateName(scrollbar$0, "Scrollbar.showTrackOnHover");
  var hoverThickness$ = dart.privateName(scrollbar$0, "Scrollbar.hoverThickness");
  var thickness$ = dart.privateName(scrollbar$0, "Scrollbar.thickness");
  var radius$ = dart.privateName(scrollbar$0, "Scrollbar.radius");
  var interactive$ = dart.privateName(scrollbar$0, "Scrollbar.interactive");
  var notificationPredicate$ = dart.privateName(scrollbar$0, "Scrollbar.notificationPredicate");
  scrollbar$0.Scrollbar = class Scrollbar extends framework.StatefulWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 12,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEditingComplete",
        [_Location_column]: 12,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSubmitted",
        [_Location_column]: 12,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "inputFormatters",
        [_Location_column]: 12,
        [_Location_line]: 283,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 12,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorWidth",
        [_Location_column]: 12,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorHeight",
        [_Location_column]: 12,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorRadius",
        [_Location_column]: 12,
        [_Location_line]: 287,
        [_Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorColor",
        [_Location_column]: 12,
        [_Location_line]: 288,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollPadding",
        [_Location_column]: 12,
        [_Location_line]: 289,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollPhysics",
        [_Location_column]: 12,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardAppearance",
        [_Location_column]: 12,
        [_Location_line]: 291,
        [_Location_file]: null
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 12,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionControls",
        [_Location_column]: 12,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "buildCounter",
        [_Location_column]: 12,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofillHints",
        [_Location_column]: 12,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 12,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27, C[28] || CT.C28, C[29] || CT.C29, C[30] || CT.C30, C[31] || CT.C31, C[32] || CT.C32, C[33] || CT.C33, C[34] || CT.C34, C[35] || CT.C35, C[36] || CT.C36, C[37] || CT.C37, C[38] || CT.C38, C[39] || CT.C39, C[40] || CT.C40, C[41] || CT.C41, C[42] || CT.C42, C[43] || CT.C43, C[44] || CT.C44, C[45] || CT.C45, C[46] || CT.C46, C[47] || CT.C47, C[48] || CT.C48, C[49] || CT.C49, C[50] || CT.C50], widget_inspector._Location);
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 251,
        [_Location_file]: "file:///C:/flutter/sdk/packages/flutter/lib/src/material/text_form_field.dart"
      });
    }
  }, false);
  var C = Array(51).fill(void 0);
  var I = [
    "file:///C:/flutter/sdk/packages/flutter/lib/src/material/text_form_field.dart",
    "package:flutter/src/material/text_form_field.dart"
  ];
  var controller$ = dart.privateName(text_form_field, "TextFormField.controller");
  var InputDecoration_alignLabelWithHint = dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint");
  var InputDecoration_semanticCounterText = dart.privateName(input_decorator, "InputDecoration.semanticCounterText");
  var InputDecoration_enabled = dart.privateName(input_decorator, "InputDecoration.enabled");
  var InputDecoration_border = dart.privateName(input_decorator, "InputDecoration.border");
  var InputDecoration_enabledBorder = dart.privateName(input_decorator, "InputDecoration.enabledBorder");
  var InputDecoration_disabledBorder = dart.privateName(input_decorator, "InputDecoration.disabledBorder");
  var InputDecoration_focusedErrorBorder = dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder");
  var InputDecoration_focusedBorder = dart.privateName(input_decorator, "InputDecoration.focusedBorder");
  var InputDecoration_errorBorder = dart.privateName(input_decorator, "InputDecoration.errorBorder");
  var InputDecoration_hoverColor = dart.privateName(input_decorator, "InputDecoration.hoverColor");
  var InputDecoration_focusColor = dart.privateName(input_decorator, "InputDecoration.focusColor");
  var InputDecoration_fillColor = dart.privateName(input_decorator, "InputDecoration.fillColor");
  var InputDecoration_filled = dart.privateName(input_decorator, "InputDecoration.filled");
  var InputDecoration_counterStyle = dart.privateName(input_decorator, "InputDecoration.counterStyle");
  var InputDecoration_counter = dart.privateName(input_decorator, "InputDecoration.counter");
  var InputDecoration_counterText = dart.privateName(input_decorator, "InputDecoration.counterText");
  var InputDecoration_suffixIconConstraints = dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints");
  var InputDecoration_suffixStyle = dart.privateName(input_decorator, "InputDecoration.suffixStyle");
  var InputDecoration_suffixText = dart.privateName(input_decorator, "InputDecoration.suffixText");
  var InputDecoration_suffix = dart.privateName(input_decorator, "InputDecoration.suffix");
  var InputDecoration_suffixIcon = dart.privateName(input_decorator, "InputDecoration.suffixIcon");
  var InputDecoration_prefixStyle = dart.privateName(input_decorator, "InputDecoration.prefixStyle");
  var InputDecoration_prefixText = dart.privateName(input_decorator, "InputDecoration.prefixText");
  var InputDecoration_prefix = dart.privateName(input_decorator, "InputDecoration.prefix");
  var InputDecoration_prefixIconConstraints = dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints");
  var InputDecoration_prefixIcon = dart.privateName(input_decorator, "InputDecoration.prefixIcon");
  var InputDecoration_isCollapsed = dart.privateName(input_decorator, "InputDecoration.isCollapsed");
  var InputDecoration_contentPadding = dart.privateName(input_decorator, "InputDecoration.contentPadding");
  var InputDecoration_isDense = dart.privateName(input_decorator, "InputDecoration.isDense");
  var InputDecoration_floatingLabelBehavior = dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior");
  var InputDecoration_hasFloatingPlaceholder = dart.privateName(input_decorator, "InputDecoration.hasFloatingPlaceholder");
  var InputDecoration_errorMaxLines = dart.privateName(input_decorator, "InputDecoration.errorMaxLines");
  var InputDecoration_errorStyle = dart.privateName(input_decorator, "InputDecoration.errorStyle");
  var InputDecoration_errorText = dart.privateName(input_decorator, "InputDecoration.errorText");
  var InputDecoration_hintMaxLines = dart.privateName(input_decorator, "InputDecoration.hintMaxLines");
  var InputDecoration_hintTextDirection = dart.privateName(input_decorator, "InputDecoration.hintTextDirection");
  var InputDecoration_hintStyle = dart.privateName(input_decorator, "InputDecoration.hintStyle");
  var InputDecoration_hintText = dart.privateName(input_decorator, "InputDecoration.hintText");
  var InputDecoration_helperMaxLines = dart.privateName(input_decorator, "InputDecoration.helperMaxLines");
  var InputDecoration_helperStyle = dart.privateName(input_decorator, "InputDecoration.helperStyle");
  var InputDecoration_helperText = dart.privateName(input_decorator, "InputDecoration.helperText");
  var InputDecoration_labelStyle = dart.privateName(input_decorator, "InputDecoration.labelStyle");
  var InputDecoration_labelText = dart.privateName(input_decorator, "InputDecoration.labelText");
  var InputDecoration_icon = dart.privateName(input_decorator, "InputDecoration.icon");
  var _name = dart.privateName(text_input, "_name");
  var _name$ = dart.privateName(ui, "_name");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var _effectiveController = dart.privateName(text_form_field, "_effectiveController");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  text_form_field.TextFormField = class TextFormField extends form.FormField$(core.String) {
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
<<<<<<< HEAD
    get isAlwaysShown() {
      return this[isAlwaysShown$];
    }
    set isAlwaysShown(value) {
      super.isAlwaysShown = value;
    }
    get showTrackOnHover() {
      return this[showTrackOnHover$];
    }
    set showTrackOnHover(value) {
      super.showTrackOnHover = value;
    }
    get hoverThickness() {
      return this[hoverThickness$];
    }
    set hoverThickness(value) {
      super.hoverThickness = value;
    }
    get thickness() {
      return this[thickness$];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    get interactive() {
      return this[interactive$];
    }
    set interactive(value) {
      super.interactive = value;
    }
    get notificationPredicate() {
      return this[notificationPredicate$];
    }
    set notificationPredicate(value) {
      super.notificationPredicate = value;
    }
    createState() {
      return new scrollbar$0._ScrollbarState.new();
    }
  };
  (scrollbar$0.Scrollbar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
    let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
    let hoverThickness = opts && 'hoverThickness' in opts ? opts.hoverThickness : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : null;
    let interactive = opts && 'interactive' in opts ? opts.interactive : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[controller$] = controller;
    this[isAlwaysShown$] = isAlwaysShown;
    this[showTrackOnHover$] = showTrackOnHover;
    this[hoverThickness$] = hoverThickness;
    this[thickness$] = thickness;
    this[radius$] = radius;
    this[notificationPredicate$] = notificationPredicate;
    this[interactive$] = interactive;
    scrollbar$0.Scrollbar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollbar$0.Scrollbar.prototype;
  dart.addTypeTests(scrollbar$0.Scrollbar);
  dart.addTypeCaches(scrollbar$0.Scrollbar);
  dart.setMethodSignature(scrollbar$0.Scrollbar, () => ({
    __proto__: dart.getMethods(scrollbar$0.Scrollbar.__proto__),
    createState: dart.fnType(scrollbar$0._ScrollbarState, [])
  }));
  dart.setLibraryUri(scrollbar$0.Scrollbar, I[0]);
  dart.setFieldSignature(scrollbar$0.Scrollbar, () => ({
    __proto__: dart.getFields(scrollbar$0.Scrollbar.__proto__),
    child: dart.finalFieldType(framework.Widget),
    controller: dart.finalFieldType(dart.nullable(scroll_controller.ScrollController)),
    isAlwaysShown: dart.finalFieldType(dart.nullable(core.bool)),
    showTrackOnHover: dart.finalFieldType(dart.nullable(core.bool)),
    hoverThickness: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    radius: dart.finalFieldType(dart.nullable(ui.Radius)),
    interactive: dart.finalFieldType(dart.nullable(core.bool)),
    notificationPredicate: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))
  }));
  var _useCupertinoScrollbar = dart.privateName(scrollbar$0, "_useCupertinoScrollbar");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  scrollbar$0._ScrollbarState = class _ScrollbarState extends framework.State$(scrollbar$0.Scrollbar) {
    get [_useCupertinoScrollbar]() {
      return theme$.Theme.of(this.context).platform === platform.TargetPlatform.iOS;
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2;
      if (this[_useCupertinoScrollbar]) {
        return new scrollbar$.CupertinoScrollbar.new({child: this.widget.child, isAlwaysShown: (t0 = this.widget.isAlwaysShown, t0 == null ? false : t0), thickness: (t0$ = this.widget.thickness, t0$ == null ? 3 : t0$), thicknessWhileDragging: (t0$0 = this.widget.thickness, t0$0 == null ? 8 : t0$0), radius: (t0$1 = this.widget.radius, t0$1 == null ? scrollbar$.CupertinoScrollbar.defaultRadius : t0$1), radiusWhileDragging: (t0$2 = this.widget.radius, t0$2 == null ? scrollbar$.CupertinoScrollbar.defaultRadiusWhileDragging : t0$2), controller: this.widget.controller, notificationPredicate: this.widget.notificationPredicate, $creationLocationd_0dea112b090073317d4: C[0] || CT.C0});
      }
      return new scrollbar$0._MaterialScrollbar.new({child: this.widget.child, controller: this.widget.controller, isAlwaysShown: this.widget.isAlwaysShown, showTrackOnHover: this.widget.showTrackOnHover, hoverThickness: this.widget.hoverThickness, thickness: this.widget.thickness, radius: this.widget.radius, notificationPredicate: this.widget.notificationPredicate, interactive: this.widget.interactive, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
    }
  };
  (scrollbar$0._ScrollbarState.new = function() {
    scrollbar$0._ScrollbarState.__proto__.new.call(this);
    ;
  }).prototype = scrollbar$0._ScrollbarState.prototype;
  dart.addTypeTests(scrollbar$0._ScrollbarState);
  dart.addTypeCaches(scrollbar$0._ScrollbarState);
  dart.setMethodSignature(scrollbar$0._ScrollbarState, () => ({
    __proto__: dart.getMethods(scrollbar$0._ScrollbarState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(scrollbar$0._ScrollbarState, () => ({
    __proto__: dart.getGetters(scrollbar$0._ScrollbarState.__proto__),
    [_useCupertinoScrollbar]: core.bool
  }));
  dart.setLibraryUri(scrollbar$0._ScrollbarState, I[0]);
  var showTrackOnHover$0 = dart.privateName(scrollbar$0, "_MaterialScrollbar.showTrackOnHover");
  var hoverThickness$0 = dart.privateName(scrollbar$0, "_MaterialScrollbar.hoverThickness");
  scrollbar$0._MaterialScrollbar = class _MaterialScrollbar extends scrollbar.RawScrollbar {
    get showTrackOnHover() {
      return this[showTrackOnHover$0];
    }
    set showTrackOnHover(value) {
      super.showTrackOnHover = value;
    }
    get hoverThickness() {
      return this[hoverThickness$0];
    }
    set hoverThickness(value) {
      super.hoverThickness = value;
    }
    createState() {
      return new scrollbar$0._MaterialScrollbarState.new();
    }
  };
  (scrollbar$0._MaterialScrollbar.new = function(opts) {
    let t0;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
    let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
    let hoverThickness = opts && 'hoverThickness' in opts ? opts.hoverThickness : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : null;
    let interactive = opts && 'interactive' in opts ? opts.interactive : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[showTrackOnHover$0] = showTrackOnHover;
    this[hoverThickness$0] = hoverThickness;
    scrollbar$0._MaterialScrollbar.__proto__.new.call(this, {key: key, child: child, controller: controller, isAlwaysShown: isAlwaysShown, thickness: thickness, radius: radius, fadeDuration: scrollbar$0._kScrollbarFadeDuration, timeToFade: scrollbar$0._kScrollbarTimeToFade, pressDuration: core.Duration.zero, notificationPredicate: (t0 = notificationPredicate, t0 == null ? C[21] || CT.C21 : t0), interactive: interactive, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollbar$0._MaterialScrollbar.prototype;
  dart.addTypeTests(scrollbar$0._MaterialScrollbar);
  dart.addTypeCaches(scrollbar$0._MaterialScrollbar);
  dart.setMethodSignature(scrollbar$0._MaterialScrollbar, () => ({
    __proto__: dart.getMethods(scrollbar$0._MaterialScrollbar.__proto__),
    createState: dart.fnType(scrollbar$0._MaterialScrollbarState, [])
  }));
  dart.setLibraryUri(scrollbar$0._MaterialScrollbar, I[0]);
  dart.setFieldSignature(scrollbar$0._MaterialScrollbar, () => ({
    __proto__: dart.getFields(scrollbar$0._MaterialScrollbar.__proto__),
    showTrackOnHover: dart.finalFieldType(dart.nullable(core.bool)),
    hoverThickness: dart.finalFieldType(dart.nullable(core.double))
  }));
  var ___MaterialScrollbarState__hoverAnimationController = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_hoverAnimationController");
  var _dragIsActive = dart.privateName(scrollbar$0, "_dragIsActive");
  var _hoverIsActive = dart.privateName(scrollbar$0, "_hoverIsActive");
  var ___MaterialScrollbarState__colorScheme = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_colorScheme");
  var ___MaterialScrollbarState__scrollbarTheme = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_scrollbarTheme");
  var ___MaterialScrollbarState__useAndroidScrollbar = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_useAndroidScrollbar");
  var _hoverAnimationController = dart.privateName(scrollbar$0, "_hoverAnimationController");
  var _colorScheme = dart.privateName(scrollbar$0, "_colorScheme");
  var _scrollbarTheme = dart.privateName(scrollbar$0, "_scrollbarTheme");
  var _useAndroidScrollbar = dart.privateName(scrollbar$0, "_useAndroidScrollbar");
  var _showTrackOnHover = dart.privateName(scrollbar$0, "_showTrackOnHover");
  var _states = dart.privateName(scrollbar$0, "_states");
  var _name = dart.privateName(ui, "_name");
  var _thumbColor = dart.privateName(scrollbar$0, "_thumbColor");
  var Color_value = dart.privateName(ui, "Color.value");
  var _trackColor = dart.privateName(scrollbar$0, "_trackColor");
  var _trackBorderColor = dart.privateName(scrollbar$0, "_trackBorderColor");
  var _thickness = dart.privateName(scrollbar$0, "_thickness");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _name$ = dart.privateName(platform, "_name");
  scrollbar$0._MaterialScrollbarState = class _MaterialScrollbarState extends scrollbar.RawScrollbarState$(scrollbar$0._MaterialScrollbar) {
    get [_hoverAnimationController]() {
      let t0;
      t0 = this[___MaterialScrollbarState__hoverAnimationController];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_hoverAnimationController")) : t0;
    }
    set [_hoverAnimationController](t0) {
      this[___MaterialScrollbarState__hoverAnimationController] = t0;
    }
    get [_colorScheme]() {
      let t1;
      t1 = this[___MaterialScrollbarState__colorScheme];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_colorScheme")) : t1;
    }
    set [_colorScheme](t1) {
      this[___MaterialScrollbarState__colorScheme] = t1;
    }
    get [_scrollbarTheme]() {
      let t2;
      t2 = this[___MaterialScrollbarState__scrollbarTheme];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_scrollbarTheme")) : t2;
    }
    set [_scrollbarTheme](t2) {
      this[___MaterialScrollbarState__scrollbarTheme] = t2;
    }
    get [_useAndroidScrollbar]() {
      let t3;
      t3 = this[___MaterialScrollbarState__useAndroidScrollbar];
      return t3 == null ? dart.throw(new _internal.LateError.fieldNI("_useAndroidScrollbar")) : t3;
    }
    set [_useAndroidScrollbar](t3) {
      this[___MaterialScrollbarState__useAndroidScrollbar] = t3;
    }
    get showScrollbar() {
      let t4, t4$;
      t4$ = (t4 = this.widget.isAlwaysShown, t4 == null ? this[_scrollbarTheme].isAlwaysShown : t4);
      return t4$ == null ? false : t4$;
    }
    get enableGestures() {
      let t4, t4$;
      t4$ = (t4 = this.widget.interactive, t4 == null ? this[_scrollbarTheme].interactive : t4);
      return t4$ == null ? !this[_useAndroidScrollbar] : t4$;
    }
    get [_showTrackOnHover]() {
      let t4, t4$;
      t4$ = (t4 = this.widget.showTrackOnHover, t4 == null ? this[_scrollbarTheme].showTrackOnHover : t4);
      return t4$ == null ? false : t4$;
    }
    get [_states]() {
      return (() => {
        let t4 = T.LinkedHashSetOfMaterialState().new();
        if (this[_dragIsActive]) t4.add(material_state.MaterialState.dragged);
        if (this[_hoverIsActive]) t4.add(material_state.MaterialState.hovered);
        return t4;
      })();
    }
    get [_thumbColor]() {
      let onSurface = this[_colorScheme].onSurface;
      let brightness = this[_colorScheme].brightness;
      let dragColor = null;
      function dragColor$35get() {
        let t6;
        t6 = dragColor;
        return t6 == null ? dart.throw(new _internal.LateError.localNI("dragColor")) : t6;
      }
      dart.fn(dragColor$35get, T.VoidToColor());
      function dragColor$35set(t7) {
        return dragColor = t7;
      }
      dart.fn(dragColor$35set, T.ColorTodynamic());
      let hoverColor = null;
      function hoverColor$35get() {
        let t10;
        t10 = hoverColor;
        return t10 == null ? dart.throw(new _internal.LateError.localNI("hoverColor")) : t10;
      }
      dart.fn(hoverColor$35get, T.VoidToColor());
      function hoverColor$35set(t11) {
        return hoverColor = t11;
      }
      dart.fn(hoverColor$35set, T.ColorTodynamic());
      let idleColor = null;
      function idleColor$35get() {
        let t14;
        t14 = idleColor;
        return t14 == null ? dart.throw(new _internal.LateError.localNI("idleColor")) : t14;
      }
      dart.fn(idleColor$35get, T.VoidToColor());
      function idleColor$35set(t15) {
        return idleColor = t15;
      }
      dart.fn(idleColor$35set, T.ColorTodynamic());
      switch (brightness) {
        case C[22] || CT.C22:
        {
          dragColor$35set(onSurface.withOpacity(0.6));
          hoverColor$35set(onSurface.withOpacity(0.5));
          idleColor$35set(this[_useAndroidScrollbar] ? theme$.Theme.of(this.context).highlightColor.withOpacity(1.0) : onSurface.withOpacity(0.1));
          break;
        }
        case C[23] || CT.C23:
        {
          dragColor$35set(onSurface.withOpacity(0.75));
          hoverColor$35set(onSurface.withOpacity(0.65));
          idleColor$35set(this[_useAndroidScrollbar] ? theme$.Theme.of(this.context).highlightColor.withOpacity(1.0) : onSurface.withOpacity(0.3));
          break;
        }
      }
      return material_state.MaterialStateProperty.resolveWith(ui.Color, dart.fn(states => {
        let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5;
        if (states.contains(material_state.MaterialState.dragged)) {
          t17$ = (t17 = this[_scrollbarTheme].thumbColor, t17 == null ? null : t17.resolve(states));
          return t17$ == null ? dragColor$35get() : t17$;
        }
        if (states.contains(material_state.MaterialState.hovered) && this[_showTrackOnHover]) {
          t17$1 = (t17$0 = this[_scrollbarTheme].thumbColor, t17$0 == null ? null : t17$0.resolve(states));
          return t17$1 == null ? hoverColor$35get() : t17$1;
        }
        return dart.nullCheck(ui.Color.lerp((t17$3 = (t17$2 = this[_scrollbarTheme].thumbColor, t17$2 == null ? null : t17$2.resolve(states)), t17$3 == null ? idleColor$35get() : t17$3), (t17$5 = (t17$4 = this[_scrollbarTheme].thumbColor, t17$4 == null ? null : t17$4.resolve(states)), t17$5 == null ? hoverColor$35get() : t17$5), this[_hoverAnimationController].value));
      }, T.SetOfMaterialStateToColor()));
    }
    get [_trackColor]() {
      let onSurface = this[_colorScheme].onSurface;
      let brightness = this[_colorScheme].brightness;
      return material_state.MaterialStateProperty.resolveWith(ui.Color, dart.fn(states => {
        let t17, t17$;
        if (states.contains(material_state.MaterialState.hovered) && this[_showTrackOnHover]) {
          t17$ = (t17 = this[_scrollbarTheme].trackColor, t17 == null ? null : t17.resolve(states));
          return t17$ == null ? brightness === ui.Brightness.light ? onSurface.withOpacity(0.03) : onSurface.withOpacity(0.05) : t17$;
        }
        return C[24] || CT.C24;
      }, T.SetOfMaterialStateToColor()));
    }
    get [_trackBorderColor]() {
      let onSurface = this[_colorScheme].onSurface;
      let brightness = this[_colorScheme].brightness;
      return material_state.MaterialStateProperty.resolveWith(ui.Color, dart.fn(states => {
        let t17, t17$;
        if (states.contains(material_state.MaterialState.hovered) && this[_showTrackOnHover]) {
          t17$ = (t17 = this[_scrollbarTheme].trackBorderColor, t17 == null ? null : t17.resolve(states));
          return t17$ == null ? brightness === ui.Brightness.light ? onSurface.withOpacity(0.1) : onSurface.withOpacity(0.25) : t17$;
        }
        return C[24] || CT.C24;
      }, T.SetOfMaterialStateToColor()));
    }
    get [_thickness]() {
      return material_state.MaterialStateProperty.resolveWith(core.double, dart.fn(states => {
        let t18, t17, t17$, t18$, t17$0, t17$1;
        if (states.contains(material_state.MaterialState.hovered) && this[_showTrackOnHover]) {
          t17$ = (t17 = this.widget.hoverThickness, t17 == null ? (t18 = this[_scrollbarTheme].thickness, t18 == null ? null : t18.resolve(states)) : t17);
          return t17$ == null ? 12 : t17$;
        }
        t17$1 = (t17$0 = this.widget.thickness, t17$0 == null ? (t18$ = this[_scrollbarTheme].thickness, t18$ == null ? null : t18$.resolve(states)) : t17$0);
        return t17$1 == null ? 8 / (this[_useAndroidScrollbar] ? 2 : 1) : t17$1;
      }, T.SetOfMaterialStateTodouble()));
    }
    initState() {
      super.initState();
      this[_hoverAnimationController] = new animation_controller.AnimationController.new({vsync: this, duration: C[25] || CT.C25});
      this[_hoverAnimationController].addListener(dart.fn(() => {
        this.updateScrollbarPainter();
      }, T.VoidTovoid()));
    }
    didChangeDependencies() {
      let theme = theme$.Theme.of(this.context);
      this[_colorScheme] = theme.colorScheme;
      this[_scrollbarTheme] = theme.scrollbarTheme;
      switch (theme.platform) {
        case C[26] || CT.C26:
        {
          this[_useAndroidScrollbar] = true;
          break;
        }
        case C[27] || CT.C27:
        case C[28] || CT.C28:
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[31] || CT.C31:
        {
          this[_useAndroidScrollbar] = false;
          break;
        }
      }
      super.didChangeDependencies();
    }
    updateScrollbarPainter() {
      let t18, t18$, t18$0, t18$1, t18$2, t17;
      t17 = this.scrollbarPainter;
      (() => {
        t17.color = this[_thumbColor].resolve(this[_states]);
        t17.trackColor = this[_trackColor].resolve(this[_states]);
        t17.trackBorderColor = this[_trackBorderColor].resolve(this[_states]);
        t17.textDirection = basic.Directionality.of(this.context);
        t17.thickness = this[_thickness].resolve(this[_states]);
        t17.radius = (t18$ = (t18 = this.widget.radius, t18 == null ? this[_scrollbarTheme].radius : t18), t18$ == null ? this[_useAndroidScrollbar] ? null : scrollbar$0._kScrollbarRadius : t18$);
        t17.crossAxisMargin = (t18$0 = this[_scrollbarTheme].crossAxisMargin, t18$0 == null ? this[_useAndroidScrollbar] ? 0.0 : 2 : t18$0);
        t17.mainAxisMargin = (t18$1 = this[_scrollbarTheme].mainAxisMargin, t18$1 == null ? 0.0 : t18$1);
        t17.minLength = (t18$2 = this[_scrollbarTheme].minThumbLength, t18$2 == null ? 48 : t18$2);
        t17.padding = media_query.MediaQuery.of(this.context).padding;
        return t17;
      })();
    }
    handleThumbPressStart(localPosition) {
      super.handleThumbPressStart(localPosition);
      this.setState(dart.fn(() => {
        this[_dragIsActive] = true;
      }, T.VoidTovoid()));
    }
    handleThumbPressEnd(localPosition, velocity) {
      super.handleThumbPressEnd(localPosition, velocity);
      this.setState(dart.fn(() => {
        this[_dragIsActive] = false;
      }, T.VoidTovoid()));
    }
    handleHover(event) {
      super.handleHover(event);
      if (this.isPointerOverScrollbar(event.position, event.kind)) {
        this.setState(dart.fn(() => {
          this[_hoverIsActive] = true;
        }, T.VoidTovoid()));
        this[_hoverAnimationController].forward();
      } else if (this[_hoverIsActive]) {
        this.setState(dart.fn(() => {
          this[_hoverIsActive] = false;
        }, T.VoidTovoid()));
        this[_hoverAnimationController].reverse();
      }
    }
    handleHoverExit(event) {
      super.handleHoverExit(event);
      this.setState(dart.fn(() => {
        this[_hoverIsActive] = false;
      }, T.VoidTovoid()));
      this[_hoverAnimationController].reverse();
    }
    dispose() {
      this[_hoverAnimationController].dispose();
      super.dispose();
    }
  };
  (scrollbar$0._MaterialScrollbarState.new = function() {
    this[___MaterialScrollbarState__hoverAnimationController] = null;
    this[_dragIsActive] = false;
    this[_hoverIsActive] = false;
    this[___MaterialScrollbarState__colorScheme] = null;
    this[___MaterialScrollbarState__scrollbarTheme] = null;
    this[___MaterialScrollbarState__useAndroidScrollbar] = null;
    scrollbar$0._MaterialScrollbarState.__proto__.new.call(this);
    ;
  }).prototype = scrollbar$0._MaterialScrollbarState.prototype;
  dart.addTypeTests(scrollbar$0._MaterialScrollbarState);
  dart.addTypeCaches(scrollbar$0._MaterialScrollbarState);
  dart.setGetterSignature(scrollbar$0._MaterialScrollbarState, () => ({
    __proto__: dart.getGetters(scrollbar$0._MaterialScrollbarState.__proto__),
    [_hoverAnimationController]: animation_controller.AnimationController,
    [_colorScheme]: color_scheme.ColorScheme,
    [_scrollbarTheme]: scrollbar_theme.ScrollbarThemeData,
    [_useAndroidScrollbar]: core.bool,
    [_showTrackOnHover]: core.bool,
    [_states]: core.Set$(material_state.MaterialState),
    [_thumbColor]: material_state.MaterialStateProperty$(ui.Color),
    [_trackColor]: material_state.MaterialStateProperty$(ui.Color),
    [_trackBorderColor]: material_state.MaterialStateProperty$(ui.Color),
    [_thickness]: material_state.MaterialStateProperty$(core.double)
  }));
  dart.setSetterSignature(scrollbar$0._MaterialScrollbarState, () => ({
    __proto__: dart.getSetters(scrollbar$0._MaterialScrollbarState.__proto__),
    [_hoverAnimationController]: animation_controller.AnimationController,
    [_colorScheme]: color_scheme.ColorScheme,
    [_scrollbarTheme]: scrollbar_theme.ScrollbarThemeData,
    [_useAndroidScrollbar]: core.bool
  }));
  dart.setLibraryUri(scrollbar$0._MaterialScrollbarState, I[0]);
  dart.setFieldSignature(scrollbar$0._MaterialScrollbarState, () => ({
    __proto__: dart.getFields(scrollbar$0._MaterialScrollbarState.__proto__),
    [___MaterialScrollbarState__hoverAnimationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [_dragIsActive]: dart.fieldType(core.bool),
    [_hoverIsActive]: dart.fieldType(core.bool),
    [___MaterialScrollbarState__colorScheme]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [___MaterialScrollbarState__scrollbarTheme]: dart.fieldType(dart.nullable(scrollbar_theme.ScrollbarThemeData)),
    [___MaterialScrollbarState__useAndroidScrollbar]: dart.fieldType(dart.nullable(core.bool))
  }));
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  dart.defineLazy(scrollbar$0, {
    /*scrollbar$0._kScrollbarThickness*/get _kScrollbarThickness() {
      return 8;
    },
    /*scrollbar$0._kScrollbarThicknessWithTrack*/get _kScrollbarThicknessWithTrack() {
      return 12;
    },
    /*scrollbar$0._kScrollbarMargin*/get _kScrollbarMargin() {
      return 2;
    },
    /*scrollbar$0._kScrollbarMinLength*/get _kScrollbarMinLength() {
      return 48;
    },
    /*scrollbar$0._kScrollbarRadius*/get _kScrollbarRadius() {
      return C[32] || CT.C32;
    },
    /*scrollbar$0._kScrollbarFadeDuration*/get _kScrollbarFadeDuration() {
      return C[33] || CT.C33;
    },
    /*scrollbar$0._kScrollbarTimeToFade*/get _kScrollbarTimeToFade() {
      return C[34] || CT.C34;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/material/scrollbar.dart", {
    "package:flutter/src/material/scrollbar.dart": scrollbar$0
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["scrollbar.dart"],"names":[],"mappings":"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","file":"../../../../../../../../packages/flutter/src/material/scrollbar.dart.lib.js"}');
  // Exports:
  return {
    src__material__scrollbar: scrollbar$0
  };
}));

//# sourceMappingURL=scrollbar.dart.lib.js.map
=======
    createState() {
      return new text_form_field._TextFormFieldState.new();
    }
  };
  (text_form_field.TextFormField.new = function(opts) {
    let t0, t1, t0$, t0$0, t0$1;
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let initialValue = opts && 'initialValue' in opts ? opts.initialValue : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : C[0] || CT.C0;
    let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : null;
    let textCapitalization = opts && 'textCapitalization' in opts ? opts.textCapitalization : C[1] || CT.C1;
    let textInputAction = opts && 'textInputAction' in opts ? opts.textInputAction : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : C[2] || CT.C2;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
    let toolbarOptions = opts && 'toolbarOptions' in opts ? opts.toolbarOptions : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : null;
    let obscuringCharacter = opts && 'obscuringCharacter' in opts ? opts.obscuringCharacter : "•";
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
    let autocorrect = opts && 'autocorrect' in opts ? opts.autocorrect : true;
    let smartDashesType = opts && 'smartDashesType' in opts ? opts.smartDashesType : null;
    let smartQuotesType = opts && 'smartQuotesType' in opts ? opts.smartQuotesType : null;
    let enableSuggestions = opts && 'enableSuggestions' in opts ? opts.enableSuggestions : true;
    let autovalidate = opts && 'autovalidate' in opts ? opts.autovalidate : false;
    let maxLengthEnforced = opts && 'maxLengthEnforced' in opts ? opts.maxLengthEnforced : true;
    let maxLengthEnforcement = opts && 'maxLengthEnforcement' in opts ? opts.maxLengthEnforcement : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : 1;
    let minLines = opts && 'minLines' in opts ? opts.minLines : null;
    let expands = opts && 'expands' in opts ? opts.expands : false;
    let maxLength = opts && 'maxLength' in opts ? opts.maxLength : null;
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onEditingComplete = opts && 'onEditingComplete' in opts ? opts.onEditingComplete : null;
    let onFieldSubmitted = opts && 'onFieldSubmitted' in opts ? opts.onFieldSubmitted : null;
    let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
    let validator = opts && 'validator' in opts ? opts.validator : null;
    let inputFormatters = opts && 'inputFormatters' in opts ? opts.inputFormatters : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : null;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 2;
    let cursorHeight = opts && 'cursorHeight' in opts ? opts.cursorHeight : null;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let keyboardAppearance = opts && 'keyboardAppearance' in opts ? opts.keyboardAppearance : null;
    let scrollPadding = opts && 'scrollPadding' in opts ? opts.scrollPadding : C[3] || CT.C3;
    let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let buildCounter = opts && 'buildCounter' in opts ? opts.buildCounter : null;
    let scrollPhysics = opts && 'scrollPhysics' in opts ? opts.scrollPhysics : null;
    let autofillHints = opts && 'autofillHints' in opts ? opts.autofillHints : null;
    let autovalidateMode = opts && 'autovalidateMode' in opts ? opts.autovalidateMode : null;
    let scrollController = opts && 'scrollController' in opts ? opts.scrollController : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$] = controller;
    if (!(initialValue == null || controller == null)) dart.assertFailed(null, I[0], 198, 15, "initialValue == null || controller == null");
    if (!(textAlign !== null)) dart.assertFailed(null, I[0], 199, 15, "textAlign != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[0], 200, 15, "autofocus != null");
    if (!(readOnly !== null)) dart.assertFailed(null, I[0], 201, 15, "readOnly != null");
    if (!(obscuringCharacter !== null && obscuringCharacter.length === 1)) dart.assertFailed(null, I[0], 202, 15, "obscuringCharacter != null && obscuringCharacter.length == 1");
    if (!(obscureText !== null)) dart.assertFailed(null, I[0], 203, 15, "obscureText != null");
    if (!(autocorrect !== null)) dart.assertFailed(null, I[0], 204, 15, "autocorrect != null");
    if (!(enableSuggestions !== null)) dart.assertFailed(null, I[0], 205, 15, "enableSuggestions != null");
    if (!(autovalidate !== null)) dart.assertFailed(null, I[0], 206, 15, "autovalidate != null");
    if (!(autovalidate === false || autovalidate === true && autovalidateMode == null)) dart.assertFailed("autovalidate and autovalidateMode should not be used together.", I[0], 208, 10, "autovalidate == false ||\r\n         autovalidate == true && autovalidateMode == null");
    if (!(maxLengthEnforced !== null)) dart.assertFailed(null, I[0], 212, 15, "maxLengthEnforced != null");
    if (!(maxLengthEnforced || maxLengthEnforcement == null)) dart.assertFailed("maxLengthEnforced is deprecated, use only maxLengthEnforcement", I[0], 214, 10, "maxLengthEnforced || maxLengthEnforcement == null");
    if (!(scrollPadding !== null)) dart.assertFailed(null, I[0], 217, 15, "scrollPadding != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, I[0], 218, 15, "maxLines == null || maxLines > 0");
    if (!(minLines == null || dart.notNull(minLines) > 0)) dart.assertFailed(null, I[0], 219, 15, "minLines == null || minLines > 0");
    if (!(maxLines == null || minLines == null || dart.notNull(maxLines) >= dart.notNull(minLines))) dart.assertFailed("minLines can't be greater than maxLines", I[0], 221, 10, "(maxLines == null) || (minLines == null) || (maxLines >= minLines)");
    if (!(expands !== null)) dart.assertFailed(null, I[0], 224, 15, "expands != null");
    if (!(!expands || maxLines == null && minLines == null)) dart.assertFailed("minLines and maxLines must be null when expands is true.", I[0], 226, 10, "!expands || (maxLines == null && minLines == null)");
    if (!(!obscureText || maxLines === 1)) dart.assertFailed("Obscured fields cannot be multiline.", I[0], 229, 15, "!obscureText || maxLines == 1");
    if (!(maxLength == null || dart.notNull(maxLength) > 0)) dart.assertFailed(null, I[0], 230, 15, "maxLength == null || maxLength > 0");
    if (!(enableInteractiveSelection !== null)) dart.assertFailed(null, I[0], 231, 15, "enableInteractiveSelection != null");
    text_form_field.TextFormField.__proto__.new.call(this, {key: key, initialValue: controller != null ? controller.text : (t0 = initialValue, t0 == null ? "" : t0), onSaved: onSaved, validator: validator, enabled: (t0$0 = (t0$ = enabled, t0$ == null ? (t1 = decoration, t1 == null ? null : t1.enabled) : t0$), t0$0 == null ? true : t0$0), autovalidateMode: autovalidate ? form.AutovalidateMode.always : (t0$1 = autovalidateMode, t0$1 == null ? form.AutovalidateMode.disabled : t0$1), builder: dart.fn(field => {
        let t0, t0$, t0$0, t1, t0$1, t0$2;
        let state = text_form_field._TextFormFieldState.as(field);
        let effectiveDecoration = (t0 = decoration, t0 == null ? C[0] || CT.C0 : t0).applyDefaults(theme.Theme.of(field.context).inputDecorationTheme);
        function onChangedHandler(value) {
          field.didChange(value);
          if (onChanged != null) {
            onChanged(value);
          }
        }
        dart.fn(onChangedHandler, T.StringTovoid());
        return new text_field.TextField.new({controller: state[_effectiveController], focusNode: focusNode, decoration: effectiveDecoration.copyWith({errorText: field.errorText}), keyboardType: keyboardType, textInputAction: textInputAction, style: style, strutStyle: strutStyle, textAlign: textAlign, textAlignVertical: textAlignVertical, textDirection: textDirection, textCapitalization: textCapitalization, autofocus: autofocus, toolbarOptions: toolbarOptions, readOnly: readOnly, showCursor: showCursor, obscuringCharacter: obscuringCharacter, obscureText: obscureText, autocorrect: autocorrect, smartDashesType: (t0$ = smartDashesType, t0$ == null ? obscureText ? text_input.SmartDashesType.disabled : text_input.SmartDashesType.enabled : t0$), smartQuotesType: (t0$0 = smartQuotesType, t0$0 == null ? obscureText ? text_input.SmartQuotesType.disabled : text_input.SmartQuotesType.enabled : t0$0), enableSuggestions: enableSuggestions, maxLengthEnforced: maxLengthEnforced, maxLengthEnforcement: maxLengthEnforcement, maxLines: maxLines, minLines: minLines, expands: expands, maxLength: maxLength, onChanged: onChangedHandler, onTap: onTap, onEditingComplete: onEditingComplete, onSubmitted: onFieldSubmitted, inputFormatters: inputFormatters, enabled: (t0$2 = (t0$1 = enabled, t0$1 == null ? (t1 = decoration, t1 == null ? null : t1.enabled) : t0$1), t0$2 == null ? true : t0$2), cursorWidth: cursorWidth, cursorHeight: cursorHeight, cursorRadius: cursorRadius, cursorColor: cursorColor, scrollPadding: scrollPadding, scrollPhysics: scrollPhysics, keyboardAppearance: keyboardAppearance, enableInteractiveSelection: enableInteractiveSelection, selectionControls: selectionControls, buildCounter: buildCounter, autofillHints: autofillHints, scrollController: scrollController, $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
      }, T.FormFieldStateOfStringToTextField()), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_form_field.TextFormField.prototype;
  dart.addTypeTests(text_form_field.TextFormField);
  dart.addTypeCaches(text_form_field.TextFormField);
  dart.setMethodSignature(text_form_field.TextFormField, () => ({
    __proto__: dart.getMethods(text_form_field.TextFormField.__proto__),
    createState: dart.fnType(text_form_field._TextFormFieldState, [])
  }));
  dart.setLibraryUri(text_form_field.TextFormField, I[1]);
  dart.setFieldSignature(text_form_field.TextFormField, () => ({
    __proto__: dart.getFields(text_form_field.TextFormField.__proto__),
    controller: dart.finalFieldType(dart.nullable(editable_text.TextEditingController))
  }));
  var _controller = dart.privateName(text_form_field, "_controller");
  var _handleControllerChanged = dart.privateName(text_form_field, "_handleControllerChanged");
  text_form_field._TextFormFieldState = class _TextFormFieldState extends form.FormFieldState$(core.String) {
    get [_effectiveController]() {
      let t0;
      t0 = this.widget.controller;
      return t0 == null ? this[_controller] : t0;
    }
    get widget() {
      return text_form_field.TextFormField.as(super.widget);
    }
    initState() {
      super.initState();
      if (this.widget.controller == null) {
        this[_controller] = new editable_text.TextEditingController.new({text: this.widget.initialValue});
      } else {
        dart.nullCheck(this.widget.controller).addListener(dart.bind(this, _handleControllerChanged));
      }
    }
    didUpdateWidget(oldWidget) {
      let t0, t0$;
      text_form_field.TextFormField.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        t0 = oldWidget.controller;
        t0 == null ? null : t0.removeListener(dart.bind(this, _handleControllerChanged));
        t0$ = this.widget.controller;
        t0$ == null ? null : t0$.addListener(dart.bind(this, _handleControllerChanged));
        if (oldWidget.controller != null && this.widget.controller == null) this[_controller] = new editable_text.TextEditingController.fromValue(dart.nullCheck(oldWidget.controller).value);
        if (this.widget.controller != null) {
          this.setValue(dart.nullCheck(this.widget.controller).text);
          if (oldWidget.controller == null) this[_controller] = null;
        }
      }
    }
    dispose() {
      let t0;
      t0 = this.widget.controller;
      t0 == null ? null : t0.removeListener(dart.bind(this, _handleControllerChanged));
      super.dispose();
    }
    didChange(value) {
      let t0;
      T.StringN().as(value);
      super.didChange(value);
      if (dart.nullCheck(this[_effectiveController]).text !== value) dart.nullCheck(this[_effectiveController]).text = (t0 = value, t0 == null ? "" : t0);
    }
    reset() {
      let t0;
      dart.nullCheck(this[_effectiveController]).text = (t0 = this.widget.initialValue, t0 == null ? "" : t0);
      super.reset();
    }
    [_handleControllerChanged]() {
      if (dart.nullCheck(this[_effectiveController]).text !== this.value) this.didChange(dart.nullCheck(this[_effectiveController]).text);
    }
  };
  (text_form_field._TextFormFieldState.new = function() {
    this[_controller] = null;
    text_form_field._TextFormFieldState.__proto__.new.call(this);
    ;
  }).prototype = text_form_field._TextFormFieldState.prototype;
  dart.addTypeTests(text_form_field._TextFormFieldState);
  dart.addTypeCaches(text_form_field._TextFormFieldState);
  dart.setMethodSignature(text_form_field._TextFormFieldState, () => ({
    __proto__: dart.getMethods(text_form_field._TextFormFieldState.__proto__),
    [_handleControllerChanged]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(text_form_field._TextFormFieldState, () => ({
    __proto__: dart.getGetters(text_form_field._TextFormFieldState.__proto__),
    [_effectiveController]: dart.nullable(editable_text.TextEditingController),
    widget: text_form_field.TextFormField
  }));
  dart.setLibraryUri(text_form_field._TextFormFieldState, I[1]);
  dart.setFieldSignature(text_form_field._TextFormFieldState, () => ({
    __proto__: dart.getFields(text_form_field._TextFormFieldState.__proto__),
    [_controller]: dart.fieldType(dart.nullable(editable_text.TextEditingController))
  }));
  dart.trackLibraries("packages/flutter/src/material/text_form_field.dart", {
    "package:flutter/src/material/text_form_field.dart": text_form_field
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["text_form_field.dart"],"names":[],"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","file":"../../../../../../../packages/flutter/src/material/text_form_field.dart.lib.js"}');
  // Exports:
  return {
    src__material__text_form_field: text_form_field
  };
}));

//# sourceMappingURL=text_form_field.dart.lib.js.map
>>>>>>> f328dd0bb65c1607d89f0ba7207434a99e478358
